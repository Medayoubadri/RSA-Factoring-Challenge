#!/usr/bin/env python3

import sys
from math import gcd

def trial_division(n):
    """Perform trial division to quickly factorize small numbers."""
    for i in [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53]:
        if n % i == 0:
            return i, n // i
    return None

def pollards_rho(n):
    if n % 2 == 0:
        return 2
    
    x = 2
    y = 2
    d = 1
    
    f = lambda x: (x**2 + 1) % n
    
    while d == 1:
        x = f(x)
        y = f(f(y))
        d = gcd(abs(x - y), n)
    
    if d == n:
        return None
    else:
        return d

def factorize(n):
    if n <= 3:
        return n, 1

    # Try trial division first
    factor_pair = trial_division(n)
    if factor_pair:
        return factor_pair

    # If trial division fails, use Pollard's Rho
    factor = pollards_rho(n)
    if factor:
        return factor, n // factor
    return n, 1

def main(filename):
    try:
        with open(filename, 'r') as file:
            numbers = [int(line.strip()) for line in file]
        
        for n in numbers:
            p, q = factorize(n)
            print(f"{n}={p}*{q}")
    
    except FileNotFoundError:
        print(f"Error: File '{filename}' not found.")
    except ValueError:
        print(f"Error: Invalid number in the file.")
    except Exception as e:
        print(f"An error occurred: {e}")

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Usage: factors <file>")
        sys.exit(1)
    main(sys.argv[1])

